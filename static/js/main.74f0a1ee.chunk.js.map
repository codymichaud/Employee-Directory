{"version":3,"sources":["Components/NavBar/index.js","utils/APIcall.js","Components/Alerts/index.js","Components/EmploySearch/index.js","Components/EmployDisplay/index.js","Components/Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","exportedObject","getEmployeeList","axios","get","Alerts","props","type","role","style","margin","EmploySearch","value","search","onChange","handleInputChange","name","placeholder","id","EmployTable","striped","scope","onClick","sortByName","state","filteredEmploy","map","employee","src","picture","thumbnail","alt","last","first","email","phone","location","city","Container","employees","sortDirection","error","events","a","values","target","setState","filterEmploy","filter","toLowerCase","includes","trim","errorMessage","length","key","sortNameList","direction","sort","x","y","ast","ApiCall","then","res","data","results","catch","message","this","opacity","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74f0a1ee.chunk.js","sourcesContent":["import React from 'react';\r\nimport './directory.css';\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <div className='row bg-dark text-white'>\r\n            <div className='col'>\r\n                <div className='text-light pt-2'>\r\n                    <h1 className='display-4'>Employee Directory</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import axios from 'axios';\r\n\r\nconst APIURL = 'https://randomuser.me/api/?results=50&nat=fr&seed=foobar&exc=login,registered';\r\n\r\nconst exportedObject = {\r\n    getEmployeeList: () => {\r\n        return axios.get(APIURL);\r\n    },\r\n};\r\n\r\nexport default exportedObject;","import React from 'react';\r\nimport { TiWarning } from 'react-icons/ti'\r\n\r\n\r\nfunction Alerts(props) {\r\n    return (\r\n        <div>\r\n            <div className={`alert alert-${props.type} fade in`} role='alert' style={{ margin: 'auto', ...props.style }}>\r\n                <TiWarning />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alerts;","import React from 'react';\r\nimport { BsSearch } from 'react-icons/bs';\r\nimport './employSearch.css';\r\n\r\n// Function to allow searching for a specific user\r\n\r\nfunction EmploySearch(props) {\r\n    return (\r\n        <form>\r\n            <div className='firstForm'>\r\n                <div className='inputField'>\r\n                    <div className='icon'>\r\n                        <BsSearch />\r\n                    </div>\r\n                    <input\r\n                        value={props.search}\r\n                        onChange={props.handleInputChange}\r\n                        name='search'\r\n                        type='text'\r\n                        className='form-control'\r\n                        placeholder='Employee Search....'\r\n                        id='search' />\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default EmploySearch;","import React from 'react';\r\nimport './employDisplay.css';\r\n\r\nfunction EmployTable(props) {\r\n    return (\r\n        <table striped className='table'>\r\n            <thead>\r\n                <tr>\r\n                    <th scope='col'>\r\n                        Picture\r\n                    </th>\r\n                    <th scope='col'>\r\n                        <span className='sortable th-inner' onClick={() => props.sortByName('first')}>First&#160;</span>\r\n                    </th>\r\n                    <th scope='col'>\r\n                        <span className='th-inner sortable' onClick={() => props.sortByName('last')}>Last&#160;</span>\r\n                    </th>\r\n                    <th scope='col'>Email</th>\r\n                    <th scope='col'>Phone #</th>\r\n                    <th scope='col'>City</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.state.filteredEmploy.map((employee) => {\r\n                    return (\r\n                        <tr key={employee.id.value}>\r\n                            <td>\r\n                                <img src={employee.picture.thumbnail}\r\n                                    alt={employee.name.last} />\r\n                            </td>\r\n                            <td>{employee.name.first}</td>\r\n                            <td>{employee.name.last}</td>\r\n                            <td>{employee.email}</td>\r\n                            <td>{employee.phone}</td>\r\n                            <td>{employee.location.city}</td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default EmployTable;","import React, { Component } from 'react';\r\nimport ApiCall from '../../utils/APIcall';\r\nimport Alerts from '../Alerts';\r\nimport EmploySearch from '../EmploySearch';\r\nimport EmployTable from '../EmployDisplay';\r\n\r\nclass Container extends Component {\r\n    state = {\r\n        search: '',\r\n        employees: [],\r\n        filteredEmploy: [],\r\n        sortDirection: 'asc',\r\n        error: '',\r\n    };\r\n    //Getting employee list\r\n    componentDidMount() {\r\n        ApiCall.getEmployeeList()\r\n            .then((res) =>\r\n                this.setState({\r\n                    employees: res.data.results,\r\n                    filteredEmploy: res.data.results,\r\n                }))\r\n            .catch((error) => {\r\n                this.setState({ error: error.message });\r\n            });\r\n    }\r\n    handleInputChange = async (events) => {\r\n        const values = events.target.values;\r\n        await this.setState({ search: values });\r\n        this.filterEmploy(values);\r\n    };\r\n\r\n    filterEmploy = (values) => {\r\n        this.setState({\r\n            filteredEmploy: this.state.employees.filter((employee) => {\r\n                return (\r\n                    employee.name.last\r\n                        .toLowerCase()\r\n                        .includes(values.toLowerCase().trim()) ||\r\n                    employee.name.first.toLowerCase().includes(values.toLowerCase().trim())\r\n                );\r\n            }),\r\n        });\r\n        this.errorMessage(this.state.filteredEmploy);\r\n    };\r\n\r\n    //If no results are found an error will display\r\n\r\n    errorMessage = (values) => {\r\n        if (values.length === 0) {\r\n            let error = 'There are no results found for this search. Please try different filters';\r\n            this.setState({ error: error });\r\n        } else {\r\n            this.setState({ error: '' });\r\n        }\r\n    };\r\n    //Allows names to be sorted by first or last name\r\n    sortByName = (key) => {\r\n        let sortNameList;\r\n        let direction;\r\n\r\n        switch (key) {\r\n            case 'last':\r\n                if (this.state.sortDirection === 'asc') {\r\n                    sortNameList = this.state.filteredEmploy.sort((x, y) =>\r\n                        x.name.last > y.name.last ? 1 : -1\r\n                    );\r\n                    direction = 'dsc';\r\n                } else {\r\n                    sortNameList = this.state.filteredEmploy.sort((x, y) =>\r\n                        x.name.last < y.name.ast ? 1 : -1\r\n                    );\r\n                    direction = 'asc';\r\n                }\r\n                break;\r\n            case 'first':\r\n                if (this.state.sortDirection === 'asc') {\r\n                    sortNameList = this.state.filteredEmploy.sort((x, y) =>\r\n                        x.name.first > y.name.first ? 1 : -1\r\n                    );\r\n                    direction = 'dsc';\r\n                } else {\r\n                    sortNameList = this.state.filteredEmploy.sort((x, y) =>\r\n                        x.name.first < y.name.first ? 1 : -1\r\n                    );\r\n                    direction = 'asc';\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            filterEmploy: sortNameList,\r\n            sortDirection: direction,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                <div className='col'>\r\n                    <div className='container'>\r\n                        <EmploySearch values={this.state.search}\r\n                            handleInputChange={this.handleInputChange} />\r\n                        <div className=''>\r\n                            <EmployTable state={this.state} filterEmploy={this.filterEmploy} sortByName={this.sortByName} />\r\n                        </div>\r\n                        <Alerts type='warning' style={{ opacity: this.state.error ? 1 : 0 }}>\r\n                            {this.state.error}\r\n                        </Alerts>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Container;","import React from 'react';\nimport NavBar from './Components/NavBar';\nimport Container from './Components/Container';\n\nfunction App() {\n  return (\n    <div className='container-fluid'>\n      <NavBar />\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}